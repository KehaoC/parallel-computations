矩阵乘法: (128 x 128) * (128 x 128) = (128 x 128)
矩阵 A (128x128):
0.9173 0.6698 0.0908 0.8770 0.0764 0.9156 ...
0.4308 0.9012 0.3082 0.9557 0.4141 0.2616 ...
0.0388 0.8205 0.7002 0.9510 0.1289 0.3296 ...
0.5065 0.0344 0.0104 0.7591 0.9772 0.7227 ...
0.3509 0.7590 0.9910 0.8986 0.3037 0.4248 ...
0.9267 0.3491 0.9792 0.8635 0.9171 0.3346 ...
...

矩阵 B (128x128):
0.9238 0.6115 0.1837 0.0734 0.3070 0.7842 ...
0.0278 0.5866 0.5566 0.7550 0.9500 0.6744 ...
0.1345 0.3318 0.0969 0.8980 0.1614 0.1341 ...
0.1949 0.2001 0.1800 0.3192 0.0792 0.3079 ...
0.8688 0.3810 0.4620 0.0053 0.7504 0.9101 ...
0.0726 0.7266 0.6567 0.6372 0.8751 0.3801 ...
...


朴素CUDA矩阵乘法：
线程块大小	执行时间(ms)	验证结果
8x8		202.2291		通过
16x16		0.0167		通过
32x32		0.0172		通过

共享内存优化的CUDA矩阵乘法：
线程块大小	执行时间(ms)	验证结果
8x8		0.0265		通过
16x16		0.0234		通过
32x32		0.0261		通过
结果矩阵 C (128x128):
35.8880 32.5256 33.9808 32.7982 32.0722 32.4964 ...
31.1737 32.1623 31.0585 31.0007 30.4593 32.1286 ...
31.7949 31.1375 33.0966 32.5585 29.7615 31.4221 ...
33.7519 31.9148 32.0064 32.6021 30.4992 32.9799 ...
32.7367 32.2485 32.5518 32.9991 31.0097 33.6273 ...
33.4782 34.0796 33.1837 32.7146 31.8074 34.7444 ...
...
